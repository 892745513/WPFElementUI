<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="http://schemas.microsoft.com/netfx/2009/xaml/presentation"
                    xmlns:system1="clr-namespace:System;assembly=mscorlib">
     
    <Style x:Key="ButtonBase" TargetType="{x:Type Button}">
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>   
        <Setter Property="Background" Value="{DynamicResource SolidBrushColorPageBackground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="16,8"/>
        <Setter Property="Margin" Value="2"/>
 
        <Setter Property="BorderBrush" Value="{DynamicResource SolidBrushBaseBorder}"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource SolidBrushPrimaryText}"/>  
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="4"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False"> 
                            <Setter Property="Opacity" Value="{DynamicResource OpcityDisable}"></Setter>
                        </Trigger> 
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

 
    <!--默认按钮-->
    <Style x:Key="ButtonDefault" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBase}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource SolidBrushMain}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource SolidBrushMain4}"/>
                <Setter Property="Background" Value="{DynamicResource SolidBrushMain6}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity" Value="{DynamicResource OpcityPressed}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource SolidBrushMain}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--主要按钮-->
    <Style x:Key="ButtonPrimary" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Background" Value="{DynamicResource SolidBrushMain}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource SolidBrushBasicWhite}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="{DynamicResource OpcityMouseOver}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity" Value="{DynamicResource OpcityPressed}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--成功按钮-->
    <Style x:Key="ButtonSuccess" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonPrimary}">
        <Setter Property="Background" Value="{DynamicResource SolidBrushSuccess}"/> 
        <Setter Property="Foreground" Value="{DynamicResource SolidBrushBasicWhite}"/>
    </Style>
    <!--警告按钮-->
    <Style x:Key="ButtonWarning" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonPrimary}">
        <Setter Property="Background" Value="{DynamicResource SolidBrushWarning}"/>
        <Setter Property="Foreground" Value="{DynamicResource SolidBrushBasicWhite}"/>
   
    </Style>

    <!--危险按钮-->
    <Style x:Key="ButtonDanger" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonPrimary}">
        <Setter Property="Background" Value="{DynamicResource SolidBrushDanger}"/>
        <Setter Property="Foreground" Value="{DynamicResource SolidBrushBasicWhite}"/>
    
    </Style>


    <!--信息按钮-->
    <Style x:Key="ButtonInfo" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonPrimary}">
        <Setter Property="Background" Value="{DynamicResource SolidBrushInfo}"/>
        <Setter Property="Foreground" Value="{DynamicResource SolidBrushBasicWhite}"/>
    </Style> 
    
    <!--朴素按钮-默认-->
    <Style x:Key="ButtonPlainDefault" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBase}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource SolidBrushMain}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource SolidBrushMain4}"/>
                <Setter Property="Background" Value="{DynamicResource SolidBrushMain6}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity" Value="{DynamicResource OpcityPressed}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource SolidBrushMain}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--朴素按钮-主要-->
    <Style x:Key="ButtonPlainPrimary" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Background" Value="{DynamicResource SolidBrushMain6}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SolidBrushMain}"/>
        <Setter Property="Foreground" Value="{DynamicResource SolidBrushMain}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource SolidBrushMain}"/>
                <Setter Property="Foreground" Value="{DynamicResource SolidBrushBasicWhite}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity" Value="{DynamicResource OpcityPressed}"/>

            </Trigger>
        </Style.Triggers>
    </Style>

    <!--朴素按钮-成功-->
    <Style x:Key="ButtonPlainSuccess" TargetType="{x:Type Button}"  BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Background" Value="{DynamicResource SolidBrushSuccess6}"/>
 
        <Setter Property="BorderBrush" Value="{DynamicResource SolidBrushSuccess}"/>
        <Setter Property="Foreground" Value="{DynamicResource SolidBrushSuccess}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource SolidBrushSuccess}"/>
                <Setter Property="Foreground" Value="{DynamicResource SolidBrushBasicWhite}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity" Value="{DynamicResource OpcityPressed}"/>

            </Trigger>
        </Style.Triggers>
    </Style>

    <!--朴素按钮-信息-->
    <Style x:Key="ButtonPlainInfo" TargetType="{x:Type Button}"  BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Background" Value="{DynamicResource SolidBrushInfo6}"/>
 
        <Setter Property="BorderBrush" Value="{DynamicResource SolidBrushInfo}"/>
        <Setter Property="Foreground" Value="{DynamicResource SolidBrushInfo}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource SolidBrushInfo}"/>
                <Setter Property="Foreground" Value="{DynamicResource SolidBrushBasicWhite}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity" Value="{DynamicResource OpcityPressed}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--朴素按钮-警告-->
    <Style x:Key="ButtonPlainWarning" TargetType="{x:Type Button}"  BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Background" Value="{DynamicResource SolidBrushWarning6}"/>
  
        <Setter Property="BorderBrush" Value="{DynamicResource SolidBrushWarning}"/>
        <Setter Property="Foreground" Value="{DynamicResource SolidBrushWarning}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource SolidBrushWarning}"/>
                <Setter Property="Foreground" Value="{DynamicResource SolidBrushBasicWhite}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity" Value="{DynamicResource OpcityPressed}"/>

            </Trigger>
        </Style.Triggers>
    </Style>

    <!--朴素按钮-危险-->
    <Style x:Key="ButtonPlainDanger" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Background" Value="{DynamicResource SolidBrushDanger6}"/>
 
        <Setter Property="BorderBrush" Value="{DynamicResource SolidBrushDanger}"/>
        <Setter Property="Foreground" Value="{DynamicResource SolidBrushDanger}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource SolidBrushDanger}"/>
                <Setter Property="Foreground" Value="{DynamicResource SolidBrushBasicWhite}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity" Value="{DynamicResource OpcityPressed}"/>

            </Trigger>
        </Style.Triggers>
    </Style>

    
      

    <Style x:Key="ButtonCircleBase" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBase}"> 
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderThickness" Value="2"></Setter>
        <Setter Property="Height" Value="32"></Setter>

        <Setter Property="Width" Value="32"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="{Binding ActualHeight, RelativeSource={RelativeSource  Mode=FindAncestor , AncestorType=Button} }"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False"> 
                            <Setter Property="Opacity" Value="{DynamicResource ButtonDisableOpcity}"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--朴素按钮-默认-->
    <Style x:Key="ButtonPlainCircleDefault" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonCircleBase}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource SolidBrushMain}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource SolidBrushMain4}"/>
                <Setter Property="Background" Value="{DynamicResource SolidBrushMain6}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity" Value="{DynamicResource OpcityPressed}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource SolidBrushMain}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--朴素按钮-主要-->
    <Style x:Key="ButtonPlainCirclePrimary" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonCircleBase}">
        <Setter Property="Background" Value="{DynamicResource SolidBrushMain6}"/> 
        <Setter Property="BorderBrush" Value="{DynamicResource SolidBrushMain}"/>
        <Setter Property="Foreground" Value="{DynamicResource SolidBrushMain}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource SolidBrushMain}"/>
                <Setter Property="Foreground" Value="{DynamicResource SolidBrushBasicWhite}"/>
           
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity" Value="{DynamicResource OpcityPressed}"/>

            </Trigger>
        </Style.Triggers>
    </Style>

    <!--朴素按钮-成功-->
    <Style x:Key="ButtonPlainCircleSuccess" TargetType="{x:Type Button}"  BasedOn="{StaticResource ButtonCircleBase}">
        <Setter Property="Background" Value="{DynamicResource SolidBrushSuccess6}"/>
     
        <Setter Property="BorderBrush" Value="{DynamicResource SolidBrushSuccess}"/>
        <Setter Property="Foreground" Value="{DynamicResource SolidBrushSuccess}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource SolidBrushSuccess}"/>
                <Setter Property="Foreground" Value="{DynamicResource SolidBrushBasicWhite}"/>
              
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity" Value="{DynamicResource OpcityPressed}"/>

            </Trigger>
        </Style.Triggers>
    </Style>

    <!--朴素按钮-信息-->
    <Style x:Key="ButtonPlainCircleInfo" TargetType="{x:Type Button}"  BasedOn="{StaticResource ButtonCircleBase}">
        <Setter Property="Background" Value="{DynamicResource SolidBrushInfo6}"/> 
        <Setter Property="BorderBrush" Value="{DynamicResource SolidBrushInfo}"/>
        <Setter Property="Foreground" Value="{DynamicResource SolidBrushInfo}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource SolidBrushInfo}"/>
                <Setter Property="Foreground" Value="{DynamicResource SolidBrushBasicWhite}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity" Value="{DynamicResource OpcityPressed}"/>

            </Trigger>
        </Style.Triggers>
    </Style>

    <!--朴素按钮-警告-->
    <Style x:Key="ButtonPlainCircleWarning" TargetType="{x:Type Button}"  BasedOn="{StaticResource ButtonCircleBase}">
        <Setter Property="Background" Value="{DynamicResource SolidBrushWarning6}"/> 
        <Setter Property="BorderBrush" Value="{DynamicResource SolidBrushWarning}"/>
        <Setter Property="Foreground" Value="{DynamicResource SolidBrushWarning}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource SolidBrushWarning}"/>
                <Setter Property="Foreground" Value="{DynamicResource SolidBrushBasicWhite}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity" Value="{DynamicResource OpcityPressed}"/>

            </Trigger>
        </Style.Triggers>
    </Style>

    <!--朴素按钮-危险-->
    <Style x:Key="ButtonPlainCircleDanger" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonCircleBase}">
        <Setter Property="Background" Value="{DynamicResource SolidBrushDanger6}"/> 
        <Setter Property="BorderBrush" Value="{DynamicResource SolidBrushDanger}"/>
        <Setter Property="Foreground" Value="{DynamicResource SolidBrushDanger}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource SolidBrushDanger}"/>
                <Setter Property="Foreground" Value="{DynamicResource SolidBrushBasicWhite}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity" Value="{DynamicResource OpcityPressed}"/>

            </Trigger>
        </Style.Triggers>
    </Style>



    <!--默认按钮-->
    <Style x:Key="ButtonCircleDefault" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonCircleBase}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource SolidBrushMain}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource SolidBrushMain4}"/>
                <Setter Property="Background" Value="{DynamicResource SolidBrushMain6}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity" Value="{DynamicResource OpcityPressed}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource SolidBrushMain}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--主要按钮-->
    <Style x:Key="ButtonCirclePrimary" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonCircleBase}">
        <Setter Property="Background" Value="{DynamicResource SolidBrushMain}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource SolidBrushBasicWhite}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="{DynamicResource OpcityMouseOver}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity" Value="{DynamicResource OpcityPressed}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--成功按钮-->
    <Style x:Key="ButtonCircleSuccess" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonCirclePrimary}">
        <Setter Property="Background" Value="{DynamicResource SolidBrushSuccess}"/>
        <Setter Property="Foreground" Value="{DynamicResource SolidBrushBasicWhite}"/>
    </Style>
    <!--警告按钮-->
    <Style x:Key="ButtonCircleWarning" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonCirclePrimary}">
        <Setter Property="Background" Value="{DynamicResource SolidBrushWarning}"/>
        <Setter Property="Foreground" Value="{DynamicResource SolidBrushBasicWhite}"/>

    </Style>

    <!--危险按钮-->
    <Style x:Key="ButtonCircleDanger" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonCirclePrimary}">
        <Setter Property="Background" Value="{DynamicResource SolidBrushDanger}"/>
        <Setter Property="Foreground" Value="{DynamicResource SolidBrushBasicWhite}"/>

    </Style>


    <!--信息按钮-->
    <Style x:Key="ButtonCircleInfo" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonCirclePrimary}">
        <Setter Property="Background" Value="{DynamicResource SolidBrushInfo}"/>
        <Setter Property="Foreground" Value="{DynamicResource SolidBrushBasicWhite}"/>
    </Style>


    <Style x:Key="TextButtonDefault" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Background" Value="{DynamicResource SolidBrushTransparent}"/>
        <Setter Property="Foreground" Value="{DynamicResource SolidBrushPrimaryText}"/>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource SolidBrushLighterBorder}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity" Value="{DynamicResource OpcityPressed}"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="TextButtonPrimary" TargetType="{x:Type Button}" BasedOn="{StaticResource TextButtonDefault}">
        <Setter Property="Foreground" Value="{DynamicResource SolidBrushMain}"/>
    </Style>
    <Style x:Key="TextButtonSuccess" TargetType="{x:Type Button}" BasedOn="{StaticResource TextButtonDefault}">
        <Setter Property="Foreground" Value="{DynamicResource SolidBrushSuccess}"/>
    </Style>
    <Style x:Key="TextButtonWarning" TargetType="{x:Type Button}" BasedOn="{StaticResource TextButtonDefault}">
        <Setter Property="Foreground" Value="{DynamicResource SolidBrushWarning}"/>
    </Style>
    <Style x:Key="TextButtonDanger" TargetType="{x:Type Button}" BasedOn="{StaticResource TextButtonDefault}">
        <Setter Property="Foreground" Value="{DynamicResource SolidBrushDanger}"/>
    </Style>
    <Style x:Key="TextButtonInfo" TargetType="{x:Type Button}" BasedOn="{StaticResource TextButtonDefault}">
        <Setter Property="Foreground" Value="{DynamicResource SolidBrushInfo}"/>
    </Style>
    

</ResourceDictionary>