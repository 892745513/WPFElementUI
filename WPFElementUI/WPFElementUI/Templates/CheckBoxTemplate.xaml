<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys1="http://schemas.microsoft.com/netfx/2009/xaml/presentation">

    <Style x:Key="CheckBoxDefault" TargetType="{x:Type CheckBox}">
        <Setter Property="Background" Value="Transparent"/>

        <Setter Property="BorderBrush" Value="{DynamicResource SolidBrushBaseBorder}"/>
        <Setter Property="Foreground" Value="{DynamicResource SolidBrushPrimaryText}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="2"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"/>  
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Border Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True"
                            CornerRadius="4" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}">
                        <Grid x:Name="templateRoot" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="checkBoxBorder" 
                                Background="{TemplateBinding Background}" 
                                BorderThickness="1"     
                                Margin="0,0,4,0"
                                SnapsToDevicePixels="True"
                                BorderBrush="{DynamicResource SolidBrushBaseBorder}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}">

                                <Grid x:Name="markGrid">
                                    <Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="White" Margin="1" Opacity="0" Stretch="None"/>
                                    <Border x:Name="indeterminateMark" Height="1" Background="White" Margin="2" VerticalAlignment="Center" Opacity="0"></Border>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter"
                                          Grid.Column="1" 
                                          Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers> 
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush"  Value="{DynamicResource SolidBrushMain2}"/>
                            <Setter Property="Foreground" Value="{DynamicResource SolidBrushMain2}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.6"></Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource SolidBrushMain}"/>
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{DynamicResource SolidBrushMain}"/>
                            <Setter Property="Foreground" Value="{DynamicResource SolidBrushMain}"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{DynamicResource SolidBrushMain}"/>
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{DynamicResource SolidBrushMain}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CheckBoxDefaultWithBorder" TargetType="{x:Type CheckBox}" BasedOn="{StaticResource CheckBoxDefault}"> 
        <Setter Property="BorderThickness" Value="1.5"/>
        <Setter Property="Padding" Value="8,8"/> 
    </Style>



    <Style x:Key="CheckBoxGroup" TargetType="{x:Type CheckBox}">
        <Setter Property="Background" Value="Transparent"/> 
        <Setter Property="BorderBrush" Value="{DynamicResource SolidBrushBaseBorder}"/>
        <Setter Property="Foreground" Value="{DynamicResource SolidBrushPrimaryText}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="8"/>
        <Setter Property="Margin" Value="0"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Border Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True"
                            CornerRadius="1" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}"> 
                            <ContentPresenter x:Name="contentPresenter"
                                          Grid.Column="1" 
                                          Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush"  Value="{DynamicResource SolidBrushMain2}"/>
                            <Setter Property="Foreground" Value="{DynamicResource SolidBrushMain2}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.6"></Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true"> 
                            <Setter Property="BorderBrush" Value="{DynamicResource SolidBrushMain}"/> 
                            <Setter Property="Foreground" Value="{DynamicResource SolidBrushMain}"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                        </Trigger> 
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>