<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">


    <Style x:Key="RadioButtonDefault" TargetType="RadioButton">
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Padding" Value="8,8"></Setter>
        <Setter Property="Background" Value="{DynamicResource SolidBrushColorBaseBackground}"/>
        <Setter Property="Margin" Value="4"/>
        <Setter Property="Foreground" Value="{DynamicResource SolidBrushPrimaryText}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border
                         Background="{TemplateBinding Background}"
                         SnapsToDevicePixels="True"
                         BorderBrush="{TemplateBinding BorderBrush}"
                         BorderThickness="{TemplateBinding BorderThickness}"
                         CornerRadius="4"
                         Padding="{TemplateBinding Padding}">
                        <Grid x:Name="templateRoot">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="radioButtonBorder" 
                                CornerRadius="100"
                                Background="{DynamicResource SolidBrushTransparent}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                BorderThickness="2"
                                BorderBrush="{DynamicResource SolidBrushBaseBorder}"
                                Margin="2,0,4,0"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid x:Name="markGrid" Margin="2">
                                    <Ellipse x:Name="optionMark" Fill="White" MinWidth="6" MinHeight="6" Opacity="0"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" 
                                          Grid.Column="1" 
                                          Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="radioButtonBorder" Value="{DynamicResource SolidBrushMain2}"/>
                            <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{DynamicResource SolidBrushMain2}"/>
                            <Setter TargetName="optionMark"  Property="Opacity" Value="1"/>
                            <Setter Property="Foreground" Value="{DynamicResource SolidBrushMain2}"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="{DynamicResource OpcityDisable}"></Setter>
                            <Setter TargetName="optionMark"  Property="Opacity" Value="{DynamicResource OpcityDisable}"/>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background" TargetName="radioButtonBorder" Value="{DynamicResource SolidBrushMain}"/>
                            <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{DynamicResource SolidBrushMain}"/>
                            <Setter TargetName="optionMark"  Property="Opacity" Value="1"/>
                            <Setter Property="Foreground" Value="{DynamicResource SolidBrushMain}"></Setter>
                            <Setter Property="FontWeight" Value="Bold"></Setter>

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RadioButtonWithBorder" TargetType="RadioButton" BasedOn="{StaticResource RadioButtonDefault}">
        <Setter Property="BorderThickness" Value="1.5"></Setter> 
        <Setter Property="BorderBrush" Value="{DynamicResource SolidBrushBaseBorder}"></Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="BorderBrush"   Value="{DynamicResource SolidBrushMain}"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="RadioButtonGroup" TargetType="{x:Type RadioButton}" BasedOn="{StaticResource  RadioButtonDefault}">
        <Setter Property="Padding" Value="16,8"></Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource SolidBrushBaseBorder}"></Setter>
        <Setter Property="BorderThickness" Value="0.5,1.5"></Setter> 
        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        <Setter Property="Margin" Value="0"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border x:Name="radioButtonBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            CornerRadius="4" 
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter x:Name="contentPresenter"
                                          Content="{TemplateBinding Content}" 
                                          Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}" 
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource SolidBrushMain}"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="{DynamicResource OpcityDisable}"></Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background" TargetName="radioButtonBorder" Value="{DynamicResource SolidBrushMain}"/>
                            <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{DynamicResource SolidBrushMain}"/>
                            <Setter Property="Foreground" Value="{DynamicResource SolidBrushBasicWhite}"></Setter>
                            <Setter Property="FontWeight" Value="Bold"></Setter> 
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="RadioButtonGroupLine" TargetType="{x:Type RadioButton}" BasedOn="{StaticResource  RadioButtonDefault}">
        <Setter Property="Padding" Value="16,8"></Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource SolidBrushBaseBorder}"></Setter>
        <Setter Property="BorderThickness" Value="0,0,0,2"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        <Setter Property="Margin" Value="0"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border x:Name="radioButtonBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            CornerRadius="4" 
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter x:Name="contentPresenter"
                                          Content="{TemplateBinding Content}" 
                                          Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}" 
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource SolidBrushMain}"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="{DynamicResource OpcityDisable}"></Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true"> 
                            <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{DynamicResource SolidBrushMain}"/>
                            <Setter Property="Foreground" Value="{DynamicResource SolidBrushMain}"></Setter>
                            <Setter Property="FontWeight" Value="Bold"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>